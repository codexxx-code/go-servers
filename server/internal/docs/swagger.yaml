definitions:
  datetime.Date:
    properties:
      time.Time:
        type: string
    type: object
  errors.Error:
    properties:
      error:
        description: |-
          Поскольку стандартный энкодер json в го не умеет нормально сериализовать тип ошибок, эта переменная
          Используется для подставления значения Err прямо перед сериализацией ошибки в функции JSON
        type: string
      humanText:
        description: |-
          Человекочитаемый текст, который можно показать клиенту
          Переменная настраивается через errors.HumanTextOption(messageWithFmt, args...)
          Если значения нет, то автоматически проставляется шаблонными данными в функции middleware.DefaultErrorEncoder
        type: string
      parameters:
        additionalProperties:
          type: string
        description: |-
          Дополнительные параметры, направленные на дополнение ошибки контекстом, которые проставляются
          Через errors.ParamsOption(key1, value1, key2, value2, ...)
        type: object
      path:
        description: |-
          Стектрейс от места враппинга ошибки. Если необходимо начать стектрейс с уровня выше, то
          Необходимо воспользоваться errors.SkipThisCallOption(errors.<const>)
          const = SkipThisCall - начать стектрейс на один уровень выше враппера errors.Type.Wrap по дереву
          const = SkipPreviousCaller и остальные работают по аналогии, пропуская все больше уровней стека вызовов
        items:
          type: string
        type: array
      systemInfo:
        $ref: '#/definitions/model.SystemInfo'
        description: |-
          Служебное поле, которое автоматически заполняется в функции middleware.DefaultErrorEncoder
          вспомогательными данными из контекста
      userInfo:
        $ref: '#/definitions/model.UserInfo'
        description: |-
          Служебное поле, которое автоматически заполняется в функции middleware.DefaultErrorEncoder
          вспомогательными данными из контекста
    type: object
  model.Forecast:
    properties:
      date:
        $ref: '#/definitions/datetime.Date'
      id:
        type: integer
      text:
        type: string
      zodiac:
        enum:
        - aries
        - taurus
        - gemini
        - cancer
        - leo
        - virgo
        - libra
        - scorpio
        - sagittarius
        - capricorn
        - aquarius
        - pisces
        type: string
    type: object
  model.SystemInfo:
    properties:
      build:
        type: string
      env:
        type: string
      hostname:
        type: string
      version:
        type: string
    type: object
  model.UserInfo:
    properties:
      deviceID:
        type: string
      taskID:
        type: string
      userID:
        type: integer
    type: object
info:
  contact:
    email: bonavii@icloud.com
    name: Ilia Ivanov
  description: API Documentation for Coin
  title: Forecast Server Documentation
  version: '@{version} (build @{build})'
paths:
  /forecast:
    get:
      parameters:
      - example:
        - "2024-01-01"
        - "2024-01-02"
        in: query
        items:
          type: string
        name: dates
        type: array
      - example:
        - aries
        - taurus
        - gemini
        - cancer
        - leo
        - virgo
        - libra
        - scorpio
        - sagittarius
        - capricorn
        - aquarius
        - pisces
        in: query
        items:
          type: string
        name: zodiacs
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Forecast'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Получение прогнозов по знакам зодиака
      tags:
      - forecast
  /generator/dailyZodiacForecast:
    get:
      parameters:
      - example: "2024-01-01"
        format: date
        in: query
        name: date
        required: true
        type: string
      - enum:
        - aries
        - taurus
        - gemini
        - cancer
        - leo
        - virgo
        - libra
        - scorpio
        - sagittarius
        - capricorn
        - aquarius
        - pisces
        in: query
        name: zodiac
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.Error'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/errors.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errors.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errors.Error'
      summary: Генерация прогноза на один день для одного знака зодиака
      tags:
      - generator
securityDefinitions:
  AuthJWT:
    description: JWT-токен авторизации
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
