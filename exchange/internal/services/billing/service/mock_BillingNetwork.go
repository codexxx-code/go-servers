// Code generated by mockery v2.46.2. DO NOT EDIT.

package service

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockBillingNetwork is an autogenerated mock type for the BillingNetwork type
type MockBillingNetwork struct {
	mock.Mock
}

// BillDSP provides a mock function with given fields: _a0, _a1
func (_m *MockBillingNetwork) BillDSP(_a0 context.Context, _a1 string) (int, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for BillDSP")
	}

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (int, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) int); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockBillingNetwork creates a new instance of MockBillingNetwork. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockBillingNetwork(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockBillingNetwork {
	mock := &MockBillingNetwork{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
